#version 330

in vec3 retNormal;
in vec2 retTexCoord;
in vec3 retFragPos;

out vec4 FragColor;

uniform vec3 LightPosition;
uniform vec3 LightColor;
uniform vec3 AmbientLight;
uniform vec3 DiffuseColor;
uniform sampler2D sampler1;
uniform sampler2D sampler2;

void main()
{
	vec3 lightDir = normalize(retFragPos - LightPosition);
	vec3 lambertian = dot(retNormal,lightDir) * LightColor;
	vec3 clampOutput = clamp(lambertian + AmbientLight, 0.0f, 1.0f) * DiffuseColor;
	FragColor = vec4(clampOutput, 1.0f) * texture(sampler1, retTexCoord);
}